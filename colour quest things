from tkinter import *
from functools import partial  # to prevent unwanted windows


class StartGame:
    """
    Initial game interface - asks user how many rounds they want to play
    """

    def __init__(self):
        # gets number of rounds from the user
        self.start_frame = Frame(padx=10, pady=10)
        self.start_frame.grid()

        # str for labels
        intro_string = ("In each round you will be asked to choose a colour. Your goal is to"
                        "beat the target score and win the round, keep your points")
        # make sure it asks to choose a number more than zero
        choose_string = "choose how many rounds you would like to play"

        # Button list  (text|font|fg)
        start_label_list = [
            ["Colour Quest", ("Arial", "16", "bold"), None],
            [intro_string, ("Arial", "12"), None],
            [choose_string, ("Arial", "12"), "#009900"],
        ]
        # create labels and add them to the reference list

        start_label_ref = []

        for count, item in enumerate(start_label_list):
            make_label = Label(self.start_frame, text=item[0], font=item[1],
                               wraplength=350, justify="left", pady=10, padx=20)
            make_label.grid(row=count)
            start_label_ref.append(make_label)

        # extract choice label, so it can be changed
        # to an error message if needed.

        self.choose_label = start_label_ref[2]

        # frame for entry box, so it can be in the same row with button
        self.entry_area_frame = Frame(self.start_frame)
        self.entry_area_frame.grid(row=3)

        self.num_rounds_entry = Entry(self.entry_area_frame,
                                      font=("Arial", "20", "bold"), width=10)
        self.num_rounds_entry.grid(row=0, column=1, padx=10, pady=10)

        self.play_button = Button(self.entry_area_frame,
                                  font=("Arial", "16", "bold"),
                                  text="Play", bg="#CC6600",
                                  fg="#FFFFFF", command=self.check_rounds)
        self.play_button.grid(row=0, column=2)

    def check_rounds(self):
        # retrieve colours to be converted
        rounds_wanted = self.num_rounds_entry.get()

        # reset label and entry box when user return to screen
        self.choose_label.config(fg="#009900", font=("Arial", "12", "bold"))
        self.num_rounds_entry.config(bg="#ffffff")

        error = "oopsie doopsie choose a WHOLE number more than ZERO"
        has_errors = "no"

        # check that amount to be converted is whole number above kelvin zero
        try:
            rounds_wanted = int(rounds_wanted)
            if rounds_wanted > 0:
                # invoke play class
                Play(rounds_wanted)
                # hide root window
                root.withdraw()

            else:
                has_errors = "yes"
        except ValueError:
            has_errors = "yes"

        # display error if necessary
        if has_errors == "yes":
            self.choose_label.config(text=error, fg="#990000", font=("Arial", "10", "bold"))
            self.num_rounds_entry.config(bg="#f4cccc")
            self.num_rounds_entry.delete(0, END)


class Play:
    """
    interface for colour quest
    """
    def __int__(self,how_many):

        self.play_box = Toplevel()

        self.game_frame = Frame(self.play_box)
        self.game_frame.grid(padx=10, pady=10)

        self.game_heading_label = Label(self.game_frame, text=f"Round 0 of {how_many}",
                                        font=("Arial", "16", "bold"))
        self.game_heading_label.grid(row=0)
# main_routine goes here
if __name__ == "__main__":
    root = Tk()
    root.title("Colour Quest")
    StartGame()
    root.mainloop()
